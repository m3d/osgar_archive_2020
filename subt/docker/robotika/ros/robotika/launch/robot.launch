<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <arg name="robot_name" default="" />
  <param name="robot_name" value="$(arg robot_name)"/>
  <!-- Launch your controller nodes -->
  <node name="$(arg robot_name)subt_solution" pkg="subt_seed" type="subt_seed_node" output="screen" args="$(arg robot_name)"/>
  <!--node name="base_transform" pkg="subt_seed" type="base_transform.py"  output="screen"/-->
  <node name="map_to_scan" pkg="robotika" type="map_to_scan.py"  output="screen"/>
  <node name="globalmap_to_localmap" pkg="robotika" type="globalmap_to_localmap.py"  output="screen"/>
  
  <!--node name="rtabmap_odom" pkg="robotika" type="rtabmap_odom.py"  output="screen">
	  <remap from="odom" to="$(arg robot_name)/odom" />
	  <remap from="rtabmap_odom" to="$(arg robot_name)/rtabmap_odom" />
	  <param name="base_link_frame_id" value="$(arg robot_name)"/>
  </node-->

  <!-- NAVIGATION -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">
	  <rosparam file="$(find robotika)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
	  <rosparam file="$(find robotika)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
	  <rosparam file="$(find robotika)/params/move_base_params.yaml" command="load" />
	  <rosparam file="$(find robotika)/params/local_costmap_params.yaml" command="load" />
          <rosparam file="$(find robotika)/params/global_costmap_params.yaml" command="load" />
          <rosparam file="$(find robotika)/params/base_local_planner_params.yaml" command="load" />
	  <param name="controller_frequency" value="10.0"/>
	  <remap from="cmd_vel" to="$(arg robot_name)/cmd_vel" />
	  <!--remap from="map" to="/rtabmap/proj_map" /-->
	  <remap from="map" to="/rtabmap/grid_map" />
	  <remap from="odom" to="$(arg robot_name)/odom" />
	  <param name="DWAPlannerROS/global_frame_id" value="$(arg robot_name)/odom"/>
	  <param name="DWAPlannerROS/odom_topic" value="/$(arg robot_name)/odom"/>
	  <param name="DWAPlannerROS/map_frame" value="$(arg robot_name)/map"/>
	  <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_link"/>
	  <param name="local_costmap/global_frame" value="$(arg robot_name)/odom"/>
	  <param name="local_costmap/obstacles/laser_scan_sensor/sensor_frame" value="$(arg robot_name)/base_link/front_laser"/>
	  <param name="local_costmap/obstacles/laser_scan_sensor/topic" value="$(arg robot_name)/front_scan"/>
	  <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_link"/>
	  <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_link"/>
  </node>

<!-- REMOTE CONTROL /-->	
	<!--node name="keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
		<param name="~speed" value="0.4" />
		<param name="~turn" value="1.0" />
		<remap from="cmd_vel" to="/$(arg robot_name)/cmd_vel"/>
	</node-->

	<node pkg="tuw_voronoi_graph" type="tuw_voronoi_graph_node" name="graph_generator" output="screen">
                <remap from="map" to="/$(arg robot_name)/local_map" />
		<param name="publish_voronoi_map_image"       value="true"/>
		<param name="map_inflation"       value="0.2"/>
		<param name="loop_rate"       value="1.0"/>
	</node>


	<!--CAMERA FRAME_ID REMAPING BECAUSE OF BUG IN SIMULATOR-->
  	<node name="frame_changer_front_depth" pkg="robotika" type="image_frame_changer.py"  output="screen">
          	<param name="src_topic" value="/$(arg robot_name)/front/depth"/>
          	<param name="dest_topic" value="/$(arg robot_name)/front/depth_optical"/>
	  	<param name="dest_frame" value="$(arg robot_name)/base_link/camera_front_optical"/>
	</node>
	<node name="frame_changer_front_rgb" pkg="robotika" type="image_frame_changer.py"  output="screen">
          	<param name="src_topic" value="/$(arg robot_name)/image_raw"/>
          	<param name="dest_topic" value="/$(arg robot_name)/image_raw_optical"/>
          	<param name="dest_frame" value="$(arg robot_name)/base_link/camera_front_optical"/>
	</node>
	<node pkg="tf" type="static_transform_publisher" name="optical_frame" args="0 0 0 -1.57 0 -1.57 $(arg robot_name)/base_link/camera_front $(arg robot_name)/base_link/camera_front_optical 100"/>


	<group ns="rtabmap">
		<node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
                     	<remap from="rgb/image" to="/$(arg robot_name)/image_raw_optical"/>
                       	<remap from="depth/image"     to="/$(arg robot_name)/front/depth_optical"/>
                       	<remap from="rgb/camera_info" to="/$(arg robot_name)/camera_info"/>
                       	<remap from="rgbd_image"      to="rgbd_image"/>
                      	<param name="approx_sync"       value="true"/>
                </node>
		
		<!--node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      			<param name="subscribe_rgbd" type="bool"   value="true"/>
			<param name="frame_id"      value="$(arg robot_name)"/>
			<param name="odom_frame_id" value="$(arg robot_name)/odom"/>
			<param name="publish_tf" value="false"/>
			<remap from="rgbd_image" to="rgbd_image"/>
		</node-->

		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          		<param name="frame_id" type="string" value="$(arg robot_name)"/>
          		<!--param name="odom_frame_id" type="string" value="$(arg robot_name)/odom"/-->
          		<param name="subscribe_depth" type="bool" value="false"/>
          		<param name="subscribe_rgbd" type="bool" value="false"/>
          		<param name="subscribe_scan" type="bool" value="false"/>
          		<param name="subscribe_scan_cloud" type="bool" value="true"/>
          		<remap from="scan_cloud"       to="/$(arg robot_name)/rgbd_camera/depth/points"/>
          		<remap from="rgb/image"       to="/$(arg robot_name)/image_raw"/>
          		<remap from="depth/image"     to="/$(arg robot_name)/front/depth"/>
          		<remap from="rgb/camera_info" to="/$(arg robot_name)/camera_info"/>
          		<remap from="scan" to="/$(arg robot_name)/front_scan"/>
	  		<remap from="odom" to="/odometry/filtered"/>
          		<remap from="rgbd_image" to="rgbd_image"/>

          		<param name="queue_size" type="int" value="10"/>

          		<!-- RTAB-Map's parameters -->
          		<param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          		<param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          		<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          		<param name="proj_max_height" type="double" value="1.0"/>
          		<param name="proj_max_ground_angle" type="double" value="45"/>
         	 	<param name="grid_unknown_space_filled" type="bool" value="true"/>
	  		<param name="grid_eroded" type="bool" value="true"/>
	  		<param name="cloud_noise_filtering_radius" type="double" value="0.1"/>
	  		<param name="cloud_noise_filtering_min_neighbours" type="double" value="10"/>
   		 </node>
    	</group>

    <!-- LOCALIZATION /-->
    <rosparam command="load" file="$(find robotika)/params/ekf_params.yaml" />
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map"  clear_params="true">
	    <!--remap from="odometry/filtered" to="odometry/filtered_map"/-->
	    <param name="odom_frame"  value="$(arg robot_name)/odom"/>
	    <param name="base_link_frame"  value="$(arg robot_name)"/>
	    <param name="world_frame"  value="$(arg robot_name)/odom"/>
	    <param name="odom0"  value="/$(arg robot_name)/odom"/>
	    <param name="imu0"  value="/$(arg robot_name)/imu/data"/>
    </node>
   <!--node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find subt_seed)/params
          -configuration_basename backpack_3d.lua"
      output="screen">
      <remap from="points2" to="/$(arg robot_name)/rgbd_camera/depth/points" />
      <remap from="imu" to="/$(arg robot_name)/imu/data" />
      <remap from="odom" to="/$(arg robot_name)/odom"/>
      <remap from="map" to="/cartogrampher_map"/>
   </node-->

   <!--node name="cartographer_occupancy_grid_node" pkg="cartographer_ros"
	   type="cartographer_occupancy_grid_node" args="-resolution 0.05">
		
       <remap from="map" to="/cartographer_map"/>

   </node-->

	<!--node>
	  <param name="subscribe_depth" type="bool" value="false"/>
	  <param name="subscribe_rgbd" type="bool" value="false"/>
	  <param name="subscribe_scan" type="bool" value="false"/>
	  <param name="subscribe_scan_cloud" type="bool" value="true"/>
	  <remap from="scan_cloud"       to="/$(arg robot_name)/rgbd_camera/depth/points"/>
	  <remap from="rgb/image"       to="/$(arg robot_name)/front/image_raw"/>
          <remap from="depth/image"     to="/$(arg robot_name)/front/depth"/>
          <remap from="rgb/camera_info" to="/$(arg robot_name)/front/camera_info"/>
	  <remap from="scan" to="/$(arg robot_name)/front_scan"/>
	  <remap from="odom" to="/$(arg robot_name)/odom"/>

          <remap from="rgbd_image" to="rgbd_image"/>

          <param name="queue_size" type="int" value="10"/>

          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
	  <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
	  <param name="proj_max_height" type="double" value="1.0"/>
	  <param name="proj_max_ground_angle" type="double" value="45"/>
	  <param name="grid_unknown_space_filled" type="bool" value="true"/>
	  <param name="grid_eroded" type="bool" value="true"/>
    </node-->


</launch>
